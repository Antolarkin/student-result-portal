---
- name: Deploy Student Result Portal to Azure
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    app_name: student-result-portal
    app_port: 3000
    acr_name: studentresultportalacr
    aks_name: student-result-portal-aks
    rg_name: student-result-portal-rg
    docker_image: "{{ acr_name }}.azurecr.io/{{ app_name }}:latest"

  tasks:
    - name: Login to Azure CLI
      command: az login --use-device-code
      register: az_login
      failed_when: az_login.rc != 0

    - name: Set Azure subscription (if needed)
      command: az account set --subscription "{{ azure_subscription_id | default(omit) }}"
      when: azure_subscription_id is defined

    - name: Build Docker image
      docker_image:
        name: "{{ app_name }}:latest"
        source: build
        build:
          path: "{{ playbook_dir }}"
          dockerfile: Dockerfile
        state: present

    - name: Login to Azure Container Registry
      command: az acr login --name {{ acr_name }}
      register: acr_login
      failed_when: acr_login.rc != 0

    - name: Tag Docker image for ACR
      command: docker tag {{ app_name }}:latest {{ docker_image }}

    - name: Push image to ACR
      command: docker push {{ docker_image }}

    - name: Get AKS credentials
      command: az aks get-credentials --resource-group {{ rg_name }} --name {{ aks_name }}

    - name: Deploy application to AKS
      command: kubectl apply -f k8s-deployment.yml

    - name: Wait for deployment to be ready
      command: kubectl wait --for=condition=available --timeout=300s deployment/{{ app_name }}

    - name: Get service external IP
      command: kubectl get svc {{ app_name }}-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: svc_ip
      until: svc_ip.stdout != ""
      retries: 10
      delay: 10

    - name: Display deployment status
      debug:
        msg: "Student Result Portal deployed successfully to Azure AKS. External IP: {{ svc_ip.stdout }}"
